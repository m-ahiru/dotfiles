enable = true

[[components]]
# Set the length of the `freqs` buffer (aka. the amount of bars)
[components.FragmentCanvas.audio_conf]
amount_bars = 2

# Set the ease behaviour of the audio changes.
# You can get an overview here: https://easings.net/
easing = "OutExponential"

# Including to the easing method, you can set the sensitivity on how fast the
# audio should react at most (should be within the range [0, 1]).
# The lower the value, the less sensitive it should be.
sensitivity = 0.1

# Set the frequency range (in Hz) which it should visualize.
freq_range = { start = 50, end = 5000 }

[components.FragmentCanvas.fragment_code]
language = "Glsl"
code = """
const float PI = 3.1415926535;

mat2 rotate(float r) {
    return mat2(cos(r), -sin(r), sin(r), cos(r));
}

float turbulence(vec2 p, int n) {
    mat2 r = rotate(0.);
    float freq = 0.3;
    for (int i = 0; i < n; ++i) {
        float phase = freq * (p * r).x + iTime * .2;

        float x = sin(phase) * .1;
        float y = cos(phase) * 1.1;
        p += vec2(x, y) / freq;

        freq *= 1.2;
        r = rotate(3. / PI + float(i)) * r;
    }

    return sin(length(p)) * .5 + .5;
}

void main() {
    vec2 p = gl_FragCoord.xy / iResolution.xy - .5;

    float m = turbulence(p * 20., 10);
    vec3 col = vec3(m);

    fragColor = vec4(col, 1.);
}
"""
